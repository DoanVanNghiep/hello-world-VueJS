{"ast":null,"code":"import EmployeeService from '../service/EmployeeService';\nimport AuthService from '../service/AuthService';\nexport default {\n  data() {\n    return {\n      id: this.$route.params.id,\n      employee: {}\n    };\n  },\n  mounted() {\n    this.fetchEmployee();\n  },\n  methods: {\n    fetchEmployee() {\n      EmployeeService.getEmployeeById(this.id).then(res => {\n        this.employee = res.data;\n      }).catch(error => {\n        console.error('Error fetching employee:', error);\n      });\n    },\n    addToCart() {\n      let cart = AuthService.loadCart();\n      const existingEmployee = cart.find(item => item.empNo === this.employee.empNo);\n      if (existingEmployee) {\n        cart = cart.map(item => item.empNo === this.employee.empNo ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item);\n      } else {\n        cart.push({\n          ...this.employee,\n          quantity: 1\n        });\n      }\n      AuthService.saveCart(cart);\n      alert('Employee added to cart');\n    }\n  }\n};","map":{"version":3,"names":["EmployeeService","AuthService","data","id","$route","params","employee","mounted","fetchEmployee","methods","getEmployeeById","then","res","catch","error","console","addToCart","cart","loadCart","existingEmployee","find","item","empNo","map","quantity","push","saveCart","alert"],"sources":["E:\\VueJS\\hello-world\\src\\components\\ViewEmployeeComponent.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <br />\r\n      <div class=\"card col-md-6 offset-md-3\">\r\n        <h3 class=\"text-center\">View Employee Details</h3>\r\n        <div class=\"card-body\">\r\n          <div class=\"row\">\r\n            <label>Employee ID:</label>\r\n            <div>{{ employee.empNo }}</div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <label>Employee Name:</label>\r\n            <div>{{ employee.empName }}</div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <label>Employee Position:</label>\r\n            <div>{{ employee.position }}</div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <label>Employee Photo:</label>\r\n            <div>\r\n              <img\r\n                v-if=\"employee.photoUrl\"\r\n                :src=\"`http://localhost:8080${employee.photoUrl}`\"\r\n                :alt=\"employee.empName\"\r\n                style=\"width: 100px; height: 100px\"\r\n              />\r\n              <div v-else>No photo available</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <label>Quantity:</label>\r\n            <div>{{ employee.quantity }}</div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <label>Price:</label>\r\n            <div>{{ employee.price }}</div>\r\n          </div>\r\n          <button class=\"btn btn-primary\" @click=\"addToCart\">Add to Cart</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import EmployeeService from '../service/EmployeeService';\r\n  import AuthService from '../service/AuthService';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        id: this.$route.params.id,\r\n        employee: {}\r\n      };\r\n    },\r\n    mounted() {\r\n      this.fetchEmployee();\r\n    },\r\n    methods: {\r\n      fetchEmployee() {\r\n        EmployeeService.getEmployeeById(this.id)\r\n          .then((res) => {\r\n            this.employee = res.data;\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error fetching employee:', error);\r\n          });\r\n      },\r\n      addToCart() {\r\n        let cart = AuthService.loadCart();\r\n        const existingEmployee = cart.find(item => item.empNo === this.employee.empNo);\r\n        if (existingEmployee) {\r\n          cart = cart.map(item =>\r\n            item.empNo === this.employee.empNo\r\n              ? { ...item, quantity: item.quantity + 1 }\r\n              : item\r\n          );\r\n        } else {\r\n          cart.push({ ...this.employee, quantity: 1 });\r\n        }\r\n        AuthService.saveCart(cart);\r\n        alert('Employee added to cart');\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .card {\r\n    margin-top: 20px;\r\n  }\r\n  </style>\r\n  "],"mappings":"AA6CE,OAAOA,eAAc,MAAO,4BAA4B;AACxD,OAAOC,WAAU,MAAO,wBAAwB;AAEhD,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,EAAE,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,EAAE;MACzBG,QAAQ,EAAE,CAAC;IACb,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACPD,aAAaA,CAAA,EAAG;MACdR,eAAe,CAACU,eAAe,CAAC,IAAI,CAACP,EAAE,EACpCQ,IAAI,CAAEC,GAAG,IAAK;QACb,IAAI,CAACN,QAAO,GAAIM,GAAG,CAACV,IAAI;MAC1B,CAAC,EACAW,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD,CAAC,CAAC;IACN,CAAC;IACDE,SAASA,CAAA,EAAG;MACV,IAAIC,IAAG,GAAIhB,WAAW,CAACiB,QAAQ,CAAC,CAAC;MACjC,MAAMC,gBAAe,GAAIF,IAAI,CAACG,IAAI,CAACC,IAAG,IAAKA,IAAI,CAACC,KAAI,KAAM,IAAI,CAAChB,QAAQ,CAACgB,KAAK,CAAC;MAC9E,IAAIH,gBAAgB,EAAE;QACpBF,IAAG,GAAIA,IAAI,CAACM,GAAG,CAACF,IAAG,IACjBA,IAAI,CAACC,KAAI,KAAM,IAAI,CAAChB,QAAQ,CAACgB,KAAI,GAC7B;UAAE,GAAGD,IAAI;UAAEG,QAAQ,EAAEH,IAAI,CAACG,QAAO,GAAI;QAAE,IACvCH,IACN,CAAC;MACH,OAAO;QACLJ,IAAI,CAACQ,IAAI,CAAC;UAAE,GAAG,IAAI,CAACnB,QAAQ;UAAEkB,QAAQ,EAAE;QAAE,CAAC,CAAC;MAC9C;MACAvB,WAAW,CAACyB,QAAQ,CAACT,IAAI,CAAC;MAC1BU,KAAK,CAAC,wBAAwB,CAAC;IACjC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}